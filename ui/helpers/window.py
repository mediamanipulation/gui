# gui/ui/helpers/window.py
try:
    from gui.ui.custom_widgets import FormulaEntry, TooltipButton, ProgressDialog
    USE_ENHANCED_UI = True
except ImportError:
    USE_ENHANCED_UI = False

"""Extracted from utils.py â€“ generated by split_utils.py."""

def apply_modern_theme(root):
    """Apply a modern theme to the application."""
    style = ttk.Style()
    
    # Try to use a modern-looking theme if available
    available_themes = style.theme_names()
    
    # Preferred themes in order
    preferred_themes = ["clam", "vista", "xpnative", "winnative", "default"]
    
    # Find the first available preferred theme
    for theme in preferred_themes:
        if theme in available_themes:
            style.theme_use(theme)
            break
    
    # Configure common styles
    style.configure("TFrame", background=BG_COLOR)
    style.configure("TLabel", background=BG_COLOR, foreground=TEXT_COLOR, font=("Segoe UI", 10))
    style.configure("TButton", font=("Segoe UI", 10), padding=5)
    style.configure("TEntry", padding=3)
    style.configure("TCheckbutton", background=BG_COLOR, font=("Segoe UI", 10))
    
    # Special button styles
    style.configure("Primary.TButton",
                   font=("Segoe UI", 10, "bold"),
                   padding=5)
    
    style.configure("Success.TButton",
                   font=("Segoe UI", 11, "bold"),
                   padding=6)
    
    # Configure the root window
    root.configure(background=BG_COLOR)

def center_window(window, width=None, height=None):
    """Center a window on the screen with optional size."""
    # Set size if provided
    if width and height:
        window.geometry(f"{width}x{height}")
    
    # Get window size
    window.update_idletasks()
    window_width = window.winfo_width()
    window_height = window.winfo_height()
    
    # Calculate position
    screen_width = window.winfo_screenwidth()
    screen_height = window.winfo_screenheight()
    x = (screen_width - window_width) // 2
    y = (screen_height - window_height) // 2
    
    # Set position
    window.geometry(f"+{x}+{y}")
