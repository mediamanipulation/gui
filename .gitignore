# Excel Transformer Application .gitignore

# =============================================================================
# Python
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# =============================================================================
# Application-Specific
# =============================================================================

# Generated content summary file
app.txt
paste.txt

# Configuration files with sensitive data
key.key
*.key

# Temporary and cache files
*.tmp
*.temp
*.cache
*~

# Backup files (created by the app)
*.bak
*.backup
*_backup_*
config_*.json.bak*
layout.bak_*

# User data and output files
exports/
output/
temp_files/
uploads/

# User-specific configurations (keep templates)
user_config.json
local_settings.json

# Log files
*.log
logs/
app.log

# Database files (if any)
*.db
*.sqlite
*.sqlite3

# =============================================================================
# Excel/Office Files (User Data)
# =============================================================================

# Excel files (typically user data, not part of source code)
*.xlsx
*.xls
*.xlsm
*.xlsb

# Other Office files
*.doc
*.docx
*.ppt
*.pptx

# CSV files (usually user data)
*.csv

# =============================================================================
# IDE and Editor
# =============================================================================

# Visual Studio Code
.vscode/
*.code-workspace

# PyCharm
.idea/
*.iml
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Atom
.atom/

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# =============================================================================
# Operating System
# =============================================================================

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =============================================================================
# Documentation and Assets (that might be large)
# =============================================================================

# Documentation build output
docs/_build/
docs/build/

# Large asset files
*.png
*.jpg
*.jpeg
*.gif
*.bmp
*.tiff
*.ico

# Video files
*.mp4
*.avi
*.mov
*.wmv

# Audio files
*.mp3
*.wav
*.flac

# =============================================================================
# Keep Important Files (Negated Patterns)
# =============================================================================

# Keep all Python source files
!*.py

# Keep configuration templates and examples
!*template*.json
!*example*.json
!sample_*.json

# Keep documentation
!*.md
!*.rst
!*.txt
!README*
!CHANGELOG*
!LICENSE*

# Keep requirements files
!requirements*.txt
!Pipfile
!pyproject.toml
!setup.py
!setup.cfg

# Keep small asset files that are part of the app
!assets/icons/*.ico
!gui/assets/*.ico
!assets/small_images/*.png

# Keep configuration files (but not sensitive ones)
!presets.json
!app_settings.json

# Keep the main entry point
!main.py

# Keep all package structure files
!__init__.py

# =============================================================================
# Development and Testing
# =============================================================================

# Test files and test data
test_data/
test_files/
sample_data/

# Performance profiling
*.prof

# Coverage reports
.coverage.*

# Benchmark results
benchmarks/results/